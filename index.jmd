## Welcome to Baduk Go Weiqi Ratings

The ratings are based on {{ngames}} games from {{from_date}} to {{to_date}}.

[A list of go teachers](go-teachers.md)

### Quicklinks

[Ranking](#Ranking)

[How to compute predicted win percentange](#how-to-compute-predicted-win-percentange)

[Infrequent players](#infrequent-players)

### Ranking

```{julia; echo=false; line_width=888}
using JDF
using DataFrames: DataFrame
using DataFrameMacros

include("c:/weiqi/simulation/utils.jl")

pings_for_md = JDF.load("pings_for_md.jdf") |> DataFrame

pings_for_md = @chain pings_for_md begin
    #select([:Rank, :Name, :Rating, Symbol("Games Played"), :region, :sex, :age, Symbol("Hanzi (汉字) Name")])
    select([:Rank, :Name, :Rating, Symbol("Games Played"), Symbol("Hanzi (汉字) Name")])
end

df_to_md(pings_for_md)
```


### How to compute predicted win percentange?

White 7.5 komi advantage is estimated to be {{elo_white75_adv}} in Elo

Black 6.5 komi advantage is estimated to be {{elo_black65_adv}} in Elo

Using the **Elo Rating** it is

Probability that player with rating `r1` wins over someone with rating `r2` is `1/(1 + 10^((r2-r1)/400))`

### Infrequent players

```{julia; echo=false; line_width=888}
using JDF
using DataFrames: DataFrame

include("c:/weiqi/simulation/utils.jl")

tmp = JDF.load("below_threshold_pings_for_md.jdf") |> DataFrame

# select!(tmp, Not(:Uncertainty))

df_to_md(tmp)
```

### Testing head to head

[Head-to-head](head-to-head-md/md/Ke Jie-Shin Jinseo.md)
[Head-to-head](head-to-head-md/md/Lee Changseok-Tao Xinran.md)
